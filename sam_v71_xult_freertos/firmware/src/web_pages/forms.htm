<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>Microchip TCP/IP Stack Demo App</title>
<link href="mchp.css" rel="stylesheet" type="text/css" />
<script src="mchp.js" type="text/javascript"></script>
</head>

<body>
<div id="shadow-one"><div id="shadow-two"><div id="shadow-three"><div id="shadow-four">
<div id="page">

<div style="padding:0 0 65px 5px"><img src="mchp.gif" alt="Microchip" align="left"/><img src="harmony.gif" alt="Harmony" align="right"/></div>

<div id="title"><div class="right">TCP/IP Stack Demo Application</div><span id="hello">&nbsp;</span></div>

<div id="menu">
<a href="index.htm">Overview</a>
<a href="dynvars.htm">Dynamic Variables</a>
<a href="ssi.htm">SSI Processing</a>
<a href="forms.htm">Processing Forms</a>
<a href="auth.htm">Authentication</a>
<a href="index.htm"></a>
<a href="cookies.htm">Cookies</a>
<a href="upload.htm">Uploading Files</a>
<a href="email">Sending Emails</a>
<a href="dyndns">Dynamic DNS</a>
<a href="protect/config.htm">Network Configuration</a>
<a href="snmp/snmpconfig.htm">SNMP Configuration</a>
</div>

<div id="content">

<h1>Processing Forms</h1>

<p>Your application will likely need to accept data from the user.  Forms allow
you to do just that.  Forms can be submitted in one of two methods (<i>GET</i> and
<i>POST</i>), and this server supports both.</p>

<h6></h6>

<p>The <b>GET</b> method appends the data to the end of the URI.  You'll see this
data following the question mark (?) in your browser's address bar.  For Microchip's
embedded server, this data is limited to around 80 bytes.  However, this sort of
submission is generally easier to process. Data sent via GET is automatically
decoded, and stored in the current HTTP connection data buffer. Your application will
handle the data in the <code>getExecute</code> callback that was registered
with the HTTP module at stack start up.
<code>TCPIP_HTTP_NET_ArgGet</code>
function provides an easy method to retrieve submitted values for processing.</p>

<p>As an example, this GET form controls several LEDs on the demo board &#40;in the current Harmony release, this part is only working on Explorer 16 board&#41;:</p>

<form method="get" action="forms.htm">
<div class="examplebox">
<b>2:</b> <select name="led2"><option value="1" ~ledSelected(2,true)~>On</option><option value="0" ~ledSelected(2,false)~>Off</option></select>&nbsp;
<b>1:</b> <select name="led1"><option value="1" ~ledSelected(1,true)~>On</option><option value="0" ~ledSelected(1,false)~>Off</option></select>&nbsp;
<br /><input type="submit" value="Save" style="margin-top:5px;">
</div>
</form>

<h6></h6>

<p>The <b>POST</b> method submits the data after the request headers are
sent.  This allows the data to be virtually unlimited in length, as long as your
application can process it in chunks.  However, your application must manage
the receipt of data, so it is generally more complicated.</p>


</div>
<script type="text/javascript">
<!--
document.getElementById('hello').innerHTML = "~hellomsg~";
-->
</script>
<div class="spacer">&nbsp;</div>
<div id="footer">Copyright &copy; 2018 Microchip Technology, Inc.</div>

</div></div></div></div></div>

</body>
</html>
